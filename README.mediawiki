=bcheck=

'''Author:''' Bryce Campbell

'''License:''' See LICENSE

'''Description:''' A crate for Rust that allows one to read and write bcheck files generated by <a href="https://github.com/bryceac/BCheckbook">BCheckbook</a>.

'''Version:''' 0.1

==Notes==

This is currently a work in progress, with a stage of testing along the way, but <strong>should</strong> work without issue.

===Why Create this library===

After having made an application that could serve as a Checkbook ledger, I thought it would be nice to create a way to read and write the saves in Rust, 
so that I can create an applications for application besides macOS and iOS, as well as learn more about serde, to see if I can 
customize serialization and deserialization as much as I could with Codable in Swift, and hopefully save others time figuring out how those files are read properly.

While it might be sometime before I can actually use this code to do anything, due to the current state of GUI programming with Rust 
and <a href="https://github.com/redox-os/orbtk">OrbTk</a>, the most promising of the bunch for doing cross platform stuff, does not quite 
yet have everything I need at the of writing this.

===Usage===

To use this library, add the following to your <strong>Cargo.toml</strong> file:

<pre>
[dependencies]
bcheck = { git = "https://github.com/bryceac/bcheck" }
</pre>

Afterwards, it is as simple as putting in something like this, if you just need the Record type:

<pre>
use bcheck::Record;
</pre>

There ae two other types that can be used when needed, which are <strong>Transaction</strong> and <strong>TransactionType</strong>.

These three should provide everything needed to parse bcheck files properly and do operations on them in code.

If you utilize <a href="https://github.com/serde-rs/serde">serde</a> and <a href="https://github.com/maciejhirsz/serde_json">serde_json</a> in your program, 
it <strong>should</strong> also be possible to create bcheck files too, but I am hoping to integrate that into this library, 
when I can find out how to create extensions for vectors.

===Contributing===

Due to this being a work in progress, I would very much appreciate it if you can help contribute code, with the only major thing left being to save data to files.

If you think you can help, feel free to fork this project and make a pull request.

Like the BCheckbook program, I will test the changes, to see if they work as they should.

===Support===

Due to my limited Rust experience, in comparison to my experience with Rust, and the fact that this is a work in progress, 
expect to be on your own for any complications.
